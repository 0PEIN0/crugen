import logging

from {{app_name}}.rest_api.serializers import ({{model_name}}CreateUpdateSerializer,
                                             {{model_name}}OutputSerializer)
from {{app_name}}.services import {{model_name}}Service
from rest.views import BaseListCreateAPIView

logger = logging.getLogger(__name__)


class {{model_name}}CreateListAPIView(BaseListCreateAPIView):

    serializer_class = {{model_name}}CreateUpdateSerializer

    def post(self,
             request,
             user_uuid,
             *args,
             **kwargs):
        """
        Api version: {{api_version}}

        Creates a new {{model_name_spaces_lower_case}} that belongs to an user that is supplied in url parameter.

        Url Parameter is `user_uuid` denoting user uuid.
        """
        user = request.user
        response, data = self.check_serializer(request=request)
        if response:
            return response
        created_{{model_file_name}} = {{model_name}}Service(
            user=user).create_with_user(user_uuid=user_uuid,
                                        data=data)
        return self.created(data=created_{{model_file_name}},
                            serializer={{model_name}}OutputSerializer,
                            request=request,
                            is_listing=False)

    def get_queryset(self,
                     user,
                     user_uuid):
        return {{model_name}}Service(user=user).get_by_user(user_uuid=user_uuid)

    def get(self,
            request,
            user_uuid,
            *args,
            **kwargs):
        """
        Api version: {{api_version}}

        Returns a list of {{model_name_spaces_lower_case}}s that belongs to an user that is supplied in url parameter.

        Url Parameter is `user_uuid` denoting user uuid.
        """
        user = request.user
        data = self.get_queryset(
            user=user,
            user_uuid=user_uuid)
        return self.ok(data=data,
                       serializer={{model_name}}OutputSerializer,
                       request=request,
                       is_listing=True,
                       many=True)
